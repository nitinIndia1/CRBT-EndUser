########################
# SERVER 10.111.222.111
########################

# SERVER
server.contextPath=/crbt/v1
server.port = 9000
#server.port=18086
#server.ssl.enabled=true
#server.ssl.keyStoreType=JKS
#server.ssl.key-store=/home/ubuntu/tomcat.keystore
#server.ssl.key-store-password=wpit@1234
#http.port=29090
server.sessionTimeout = 30

# DATABASE
#spring.datasource.url = jdbc:mysql://localhost:3306/rbtlibyana?autoReconnect=true&useUnicode=yes&characterEncoding=UTF-8
#spring.datasource.url = jdbc:mysql://182.74.113.60:3306/rbtlibyana?autoReconnect=true&useUnicode=yes&characterEncoding=UTF-8
spring.datasource.url = jdbc:mysql://10.111.222.108:3306/rbtlibyana?autoReconnect=true&useUnicode=yes&characterEncoding=UTF-8
spring.datasource.username = root
spring.datasource.password = wpit@1234
#spring.datasource.password = root
#spring.datasource.password = dishnet@098
#server 60
#spring.datasource.password = wpit@123
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
# Show or not log for each sql query
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#Hibernate
hibernate.dialect:org.hibernate.dialect.MySQL5Dialect
entitymanager.packagesToScan:com
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=false

#spring.http.multipart.max-file-size=10MB
#spring.http.multipart.max-request-size=10MB

#file.Window_SOURCE_FOLDER:C:/logs/
file.Window_SOURCE_FOLDER: /opt/Libyana/logs/
#file.Window_SOURCE_FOLDER:/opt/apache-tomcat-7.0.63/webapps/ROOT/

locale=ar-AR

#BOT DETECT CAPTCHA CONFIG
server.context_parameters.BDC_configFileLocation=/resources/botdetect.xml

#JPA
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
#spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# TOMCAT
#tomcat.accessLogEnabled=false
#tomcat.protocolHeader=x-forwarded-proto
#tomcat.remoteIpHeader=x-forwarded-for
#tomcat.backgroundProcessorDelay=30


service.get.smstemplate = http://10.111.222.111:9000/crbt/v1/get_sms_template
service.sms.url = http://10.111.222.107:8080/crbt/smpp/api/send-sms?msisdn=<MSISDN>&from=<FROM>&text=<TEXT>&configId=1&locale=<LOCALE>
sms.senderId = 99128

